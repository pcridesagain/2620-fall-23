/* Input.svelte generated by Svelte v4.2.1 */
import {
	SvelteComponent,
	attr,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal
} from "svelte/internal";

import "svelte/internal/disclose-version";

function create_fragment(ctx) {
	let input;

	return {
		c() {
			input = element("input");
			attr(input, "class", "bg-gray-700 px-3 py-2 rounded-lg text-gray-400");
			attr(input, "type", "text");
			input.value = /*placeholder*/ ctx[0];
		},
		m(target, anchor) {
			insert(target, input, anchor);
		},
		p(ctx, [dirty]) {
			if (dirty & /*placeholder*/ 1 && input.value !== /*placeholder*/ ctx[0]) {
				input.value = /*placeholder*/ ctx[0];
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) {
				detach(input);
			}
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { placeholder = "Placeholder" } = $$props;

	$$self.$$set = $$props => {
		if ('placeholder' in $$props) $$invalidate(0, placeholder = $$props.placeholder);
	};

	return [placeholder];
}

class Input extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { placeholder: 0 });
	}
}

export default Input;